.form-group
  = labeled t('user.menus'), required: true

  .col-sm-9
    div.tree.tree-unselectable
      .tree-folder style='cursor: default'
        - all_menus.merge({ 'menus.other' => { 'customer.view_phone_number' => "#" } }).each_with_index do |(top_menu, second_menus), i|
          - if (second_menus.except!(:icon, 'account_info', 'issue.management', 'team.management', 'salesman.management', 'customer.column_define', 'ivr.upload', 'ivr.inbound_config', 'ivr.extension_config', 'ivr.exchange', 'ivr.color_ring', 'ivr.settings', 'ivr.strategy', 'ivr.vip', 'ivr.satisfaction', 'form.settings', 'logo.customize').keys & current_user.company.menus.map(&:name)).any?
            .tree-folder-header
              input type='checkbox' id="top_menu_#{i}"
              | &nbsp;&nbsp;
              i class="green icon-folder-open"
              .tree-folder-name
                |  #{t(top_menu)}

            .tree-folder-content id="menus_#{i}"
              - second_menus.each do |menu_name, _|
                - if current_company.have_menu?(menu_name)
                  .tree-item style='cursor: default'
                    .tree-item-name
                      input type='checkbox' name='menus[]' value=menu_name checked=@user.have_menu?(menu_name)
                      | &nbsp;&nbsp;
                      i class="icon-file-text red"
                      |  #{t(menu_name)}

                  - if inner_menus[menu_name].present?
                    - inner_menus[menu_name].each do |inner_menu_name|
                      - if current_company.have_menu?(inner_menu_name)
                        .tree-item style='cursor: default'
                          .tree-item-name
                            | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            input type='checkbox' name='menus[]' value=inner_menu_name checked=@user.have_menu?(inner_menu_name)
                            | &nbsp;&nbsp;
                            i class='icon-file-text blue'
                            span.blue
                              |  #{t(inner_menu_name)}

    /TODO: 1. Top menu unchecked when not all checked 2. Top menu checked when all checked 3. Edit action top menu checked should show correctly. 4. At least one menu should be checked.
    coffee:
      $(document).ready () ->
        $('.tree-folder-header input[type="checkbox"]').click (e) ->
          $('#menus_' + parseInt(event.target.id.replace(/[^\d.]/g, '')) + " :checkbox").prop('checked', this.checked)

    javascript:
      var customized_validation = {
        rules: {
          'menus[]': {
            required: true
          }
        }
      };
